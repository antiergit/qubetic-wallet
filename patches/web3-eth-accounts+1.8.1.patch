diff --git a/node_modules/web3-eth-accounts/README.md b/node_modules/web3-eth-accounts/README.md
index 3089485..7727d3d 100644
--- a/node_modules/web3-eth-accounts/README.md
+++ b/node_modules/web3-eth-accounts/README.md
@@ -10,20 +10,12 @@ Please read the [documentation][docs] for more.
 
 ## Installation
 
-You can install the package either using [NPM](https://www.npmjs.com/package/web3-eth-accounts) or using [Yarn](https://yarnpkg.com/package/web3-eth-accounts)
-
-### Using NPM
+### Node.js
 
 ```bash
 npm install web3-eth-accounts
 ```
 
-### Using Yarn
-
-```bash
-yarn add web3-eth-accounts
-```
-
 ## Usage
 
 ```js
@@ -48,3 +40,4 @@ All the TypeScript typings are placed in the `types` folder.
 [repo]: https://github.com/ethereum/web3.js
 [npm-image]: https://img.shields.io/npm/v/web3-eth-accounts.svg
 [npm-url]: https://npmjs.org/package/web3-eth-accounts
+
diff --git a/node_modules/web3-eth-accounts/lib/index.js b/node_modules/web3-eth-accounts/lib/index.js
index 47ed85f..711701f 100644
--- a/node_modules/web3-eth-accounts/lib/index.js
+++ b/node_modules/web3-eth-accounts/lib/index.js
@@ -23,7 +23,7 @@
 var core = require('web3-core');
 var Method = require('web3-core-method');
 var Account = require('eth-lib/lib/account');
-var cryp = require('crypto');
+var cryp = (typeof global === 'undefined') ? require('crypto-browserify') : require('crypto');
 var scrypt = require('scrypt-js');
 var uuid = require('uuid');
 var utils = require('web3-utils');
@@ -31,7 +31,7 @@ var helpers = require('web3-core-helpers');
 var { TransactionFactory } = require('@ethereumjs/tx');
 var Common = require('@ethereumjs/common').default;
 var HardForks = require('@ethereumjs/common').Hardfork;
-var ethereumjsUtil = require('@ethereumjs/util');
+var ethereumjsUtil = require('ethereumjs-util');
 var isNot = function (value) {
     return (typeof value === 'undefined') || value === null;
 };
@@ -374,7 +374,7 @@ Accounts.prototype.hashMessage = function hashMessage(data) {
     var preamble = '\x19Ethereum Signed Message:\n' + messageBytes.length;
     var preambleBuffer = Buffer.from(preamble);
     var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);
-    return ethereumjsUtil.bufferToHex(utils.keccak256(ethMessage));
+    return ethereumjsUtil.bufferToHex(ethereumjsUtil.keccak256(ethMessage));
 };
 Accounts.prototype.sign = function sign(data, privateKey) {
     if (!privateKey.startsWith('0x')) {
diff --git a/node_modules/web3-eth-accounts/src/index.js b/node_modules/web3-eth-accounts/src/index.js
index d59e1d7..39ecaa7 100644
--- a/node_modules/web3-eth-accounts/src/index.js
+++ b/node_modules/web3-eth-accounts/src/index.js
@@ -25,7 +25,7 @@
 var core = require('web3-core');
 var Method = require('web3-core-method');
 var Account = require('eth-lib/lib/account');
-var cryp = require('crypto');
+var cryp = (typeof global === 'undefined') ? require('crypto-browserify') : require('crypto');
 var scrypt = require('scrypt-js');
 var uuid = require('uuid');
 var utils = require('web3-utils');
@@ -33,7 +33,7 @@ var helpers = require('web3-core-helpers');
 var {TransactionFactory} = require('@ethereumjs/tx');
 var Common = require('@ethereumjs/common').default;
 var HardForks = require('@ethereumjs/common').Hardfork;
-var ethereumjsUtil = require('@ethereumjs/util');
+var ethereumjsUtil = require('ethereumjs-util');
 
 var isNot = function(value) {
     return (typeof value === 'undefined') || value === null;
@@ -465,7 +465,7 @@ Accounts.prototype.hashMessage = function hashMessage(data) {
     var preamble = '\x19Ethereum Signed Message:\n' + messageBytes.length;
     var preambleBuffer = Buffer.from(preamble);
     var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);
-    return ethereumjsUtil.bufferToHex(utils.keccak256(ethMessage));
+    return ethereumjsUtil.bufferToHex(ethereumjsUtil.keccak256(ethMessage));
 };
 
 Accounts.prototype.sign = function sign(data, privateKey) {
diff --git a/node_modules/web3-eth-accounts/types/index.d.ts b/node_modules/web3-eth-accounts/types/index.d.ts
index fa50abf..f92cdc1 100644
--- a/node_modules/web3-eth-accounts/types/index.d.ts
+++ b/node_modules/web3-eth-accounts/types/index.d.ts
@@ -36,5 +36,3 @@ export interface SignatureObject {
     s: string;
     v: string;
 }
-
-export default Accounts
diff --git a/node_modules/web3-eth-accounts/types/tests/accounts-tests.ts b/node_modules/web3-eth-accounts/types/tests/accounts-tests.ts
index f3e2c59..aa7c1c3 100644
--- a/node_modules/web3-eth-accounts/types/tests/accounts-tests.ts
+++ b/node_modules/web3-eth-accounts/types/tests/accounts-tests.ts
@@ -16,10 +16,7 @@
  * @author Josh Stevens <joshstevens19@hotmail.co.uk>
  * @date 2018
  */
-import AccountsDefault, { Accounts, SignedTransaction } from 'web3-eth-accounts';
-
-// $ExpectType Accounts
-const accounts_default_empty = new AccountsDefault();
+import { Accounts, SignedTransaction } from 'web3-eth-accounts';
 
 // $ExpectType Accounts
 const accounts_empty = new Accounts();
